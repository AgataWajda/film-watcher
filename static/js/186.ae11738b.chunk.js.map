{"version":3,"file":"static/js/186.ae11738b.chunk.js","mappings":"8PAEMA,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAgB,WAAH,OACxBD,EAAAA,EAAAA,IACO,8BAADE,OAA+BH,IAClCI,MAAK,SAAAC,GAAQ,OAAIA,EAASC,IAAI,IAC9BC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAMF,EAAI,GAAE,EAEzBG,EAAe,SAAAC,GAAE,OAC5BX,EAAAA,EAAAA,IACO,SAADE,OAAUS,EAAE,aAAAT,OAAYH,IAC3BI,MAAK,SAAAC,GAAQ,OAAIA,EAASC,IAAI,IAE9BC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAMF,EAAI,GAAE,EAEzBK,EAAU,SAAAD,GAAE,OACvBX,EAAAA,EAAAA,IACO,SAADE,OAAUS,EAAE,qBAAAT,OAAoBH,IACnCI,MAAK,SAAAC,GAAQ,OAAIA,EAASC,IAAI,IAC9BF,MAAK,SAAAC,GAAQ,OAAIA,EAASS,IAAI,IAC9BP,OAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAMF,EAAI,GAAE,EAEzBO,EAAa,SAAAH,GAAE,OAC1BX,EAAAA,EAAAA,IACO,UAADE,OAAWS,EAAE,qBAAAT,OAAoBH,IACpCI,MAAK,SAAAC,GAAQ,OAAIA,EAASC,IAAI,IAC9BF,MAAK,SAAAC,GAAQ,OAAIA,EAASW,OAAO,IACjCT,OAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAMF,EAAI,GAAE,EAEzBS,EAAa,SAAAC,GAAK,OAC7BjB,EAAAA,EAAAA,IACO,wBAADE,OAAyBH,EAAO,iCAAAG,OAAgCe,IACnEd,MAAK,SAAAC,GAAQ,OAAIA,EAASC,IAAI,IAC9BF,MAAK,SAAAC,GAAQ,OAAIA,EAASW,OAAO,IACjCT,OAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAMF,EAAI,GAAE,C,8ECLtC,UA5BgB,WACd,IAAQW,GAAYC,EAAAA,EAAAA,MAAZD,QACRE,GAA8BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAQ1B,OANAI,EAAAA,EAAAA,YAAU,YAERZ,EAAAA,EAAAA,IAAWI,GAASf,MAAK,SAAAC,GAAQ,OAAIqB,EAAWrB,EAAS,GAE3D,GAAG,CAACc,EAASM,KAGXG,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,SACsB,IAAnBL,EAAQM,QACPH,EAAAA,EAAAA,KAAA,OAAAE,SAAK,8CAELF,EAAAA,EAAAA,KAAA,MAAAE,SACGL,EAAQO,KAAI,SAAAC,GAAM,OACjBC,EAAAA,EAAAA,MAAA,MAAAJ,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAAE,SAAKG,EAAOE,UACZP,EAAAA,EAAAA,KAAA,OAAAE,SAAMG,EAAOG,YAFNH,EAAOrB,GAGX,OAMjB,C","sources":["API/Api.js","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'baccf3335fd59a3ac4ec1caadf6ebad8';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const trendingToday = () =>\n  axios\n    .get(`trending/movie/day?api_key=${API_KEY}`)\n    .then(response => response.data)\n    .catch(err => console.error(err));\n\nexport const getMovieById = id =>\n  axios\n    .get(`movie/${id}?api_key=${API_KEY}`)\n    .then(response => response.data)\n\n    .catch(err => console.error(err));\n\nexport const getCast = id =>\n  axios\n    .get(`movie/${id}/credits?api_key=${API_KEY}`)\n    .then(response => response.data)\n    .then(response => response.cast)\n    .catch(err => console.error(err));\n\nexport const getReviews = id =>\n  axios\n    .get(`/movie/${id}/reviews?api_key=${API_KEY}`)\n    .then(response => response.data)\n    .then(response => response.results)\n    .catch(err => console.error(err));\n\nexport const findMovies = query =>\n  axios\n    .get(`search/movie?api_key=${API_KEY}&language=en-US&page=1&query=${query}`)\n    .then(response => response.data)\n    .then(response => response.results)\n    .catch(err => console.error(err));\n","import { getReviews } from 'API/Api';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    // if (reviews.length) {\n    getReviews(movieId).then(response => setReviews(response));\n    // }\n  }, [movieId, reviews]);\n\n  return (\n    <>\n      {reviews.length === 0 ? (\n        <div>We don't Have any reviews to this movie.</div>\n      ) : (\n        <ul>\n          {reviews.map(review => (\n            <li key={review.id}>\n              <h4>{review.author}</h4>\n              <div>{review.content}</div>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n"],"names":["API_KEY","axios","trendingToday","concat","then","response","data","catch","err","console","error","getMovieById","id","getCast","cast","getReviews","results","findMovies","query","movieId","useParams","_useState","useState","_useState2","_slicedToArray","reviews","setReviews","useEffect","_jsx","_Fragment","children","length","map","review","_jsxs","author","content"],"sourceRoot":""}