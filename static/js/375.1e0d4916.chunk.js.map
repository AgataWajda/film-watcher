{"version":3,"file":"static/js/375.1e0d4916.chunk.js","mappings":"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","sources":["API/Api.js","components/MovieDetails/MovieDetails.styled.js","components/MovieDetails/MovieDetails.jsx"],"sourcesContent":["const options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJiYWNjZjMzMzVmZDU5YTNhYzRlYzFjYWFkZjZlYmFkOCIsInN1YiI6IjY1ODBjNzM5Y2VkYWM0MDgyNzdkNzg3NCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.9Jv2bkKP8rPp7N7NGgB2vb1RhAzWq8LfGK9DtcKMe6c',\n  },\n};\n\nexport const trendingToday = () =>\n  fetch(\n    'https://api.themoviedb.org/3/trending/movie/day?language=en-US',\n    options\n  )\n    .then(response => response.json())\n    .catch(err => console.error(err));\n\nexport const getMovieById = id =>\n  fetch(`https://api.themoviedb.org/3/movie/${id}language=en-US`, options)\n    .then(response => response.json())\n\n    .catch(err => console.error(err));\n\nexport const getCast = id =>\n  fetch(\n    `https://api.themoviedb.org/3/movie/${id}/credits?language=en-US`,\n    options\n  )\n    .then(response => response.json())\n    .then(response => response.cast)\n    .catch(err => console.error(err));\n\nexport const getReviews = id =>\n  fetch(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?language=en-US&page=1`,\n    options\n  )\n    .then(response => response.json())\n    .then(response => response.results)\n    .catch(err => console.error(err));\n\nexport const findMovies = querry =>\n  fetch(\n    `https://api.themoviedb.org/3/search/movie?query=${querry}&include_adult=true&language=en-US&page=1`,\n    options\n  )\n    .then(response => response.json())\n    .then(response => response.results)\n    .catch(err => console.error(err));\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const MainConteiner = styled.div`\n  padding-left: 20px;\n  display: flex;\n  gap: 20px;\n`;\n\nexport const StyledLink = styled(Link)`\n  color: black;\n  text-decoration: none;\n  padding-top: 4px;\n  font-size: 16px;\n  font-weight: 500;\n\n  &:hover {\n    color: orange;\n  }\n`;\n","import { getMovieById } from 'API/Api';\nimport { useParams, useLocation } from 'react-router-dom';\nimport { Suspense, useEffect, useState } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport { MainConteiner } from './MovieDetails.styled';\nimport { StyledLink } from './MovieDetails.styled';\nimport { Link } from 'react-router-dom';\n\nconst MovieDetails = () => {\n  const [movieData, setMovieData] = useState([]);\n\n  const { movieId } = useParams();\n\n  const location = useLocation();\n  const from = location.state?.from ?? '/home';\n\n  useEffect(() => {\n    if (movieData.length === 0) {\n      getMovieById(movieId).then(movie => {\n        setMovieData(movie);\n      });\n    }\n  }, [movieId, movieData]);\n\n  return (\n    <>\n      <Link to={from}>Go Back</Link>\n      <MainConteiner>\n        {movieData.poster_path ? (\n          <img\n            src={`https://image.tmdb.org/t/p/w300${movieData.poster_path}`}\n            alt={movieData.original_title}\n          ></img>\n        ) : (\n          <></>\n        )}\n        <div>\n          <h2>\n            {movieData.original_title} (\n            {movieData.release_date ? (\n              movieData.release_date.slice(0, 4)\n            ) : (\n              <></>\n            )}\n            )\n          </h2>\n          <p>User Score: {Math.round(movieData.vote_average * 10)}%</p>\n          <div>\n            <h3>Overview</h3>\n            <span>{movieData.overview}</span>\n          </div>\n          <div>\n            <h3>Genres</h3>\n            <span>\n              {movieData.genres ? (\n                movieData.genres.map(genre => genre.name).join(', ')\n              ) : (\n                <></>\n              )}\n            </span>\n          </div>\n          <div>\n            <h3>Additional information</h3>\n            <ul>\n              <li>\n                <StyledLink to=\"cast\" state={{ from }}>\n                  Cast\n                </StyledLink>\n              </li>\n              <li>\n                <StyledLink to=\"reviews\" state={{ from }}>\n                  Reviews\n                </StyledLink>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </MainConteiner>\n      <Suspense fallback={<div>Lodading</div>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["options","method","headers","accept","Authorization","trendingToday","fetch","then","response","json","catch","err","console","error","getMovieById","id","concat","getCast","cast","getReviews","results","findMovies","querry","MainConteiner","styled","_templateObject","_taggedTemplateLiteral","StyledLink","Link","_templateObject2","_location$state$from","_location$state","_useState","useState","_useState2","_slicedToArray","movieData","setMovieData","movieId","useParams","from","useLocation","state","useEffect","length","movie","_jsxs","_Fragment","children","_jsx","to","poster_path","src","alt","original_title","release_date","slice","Math","round","vote_average","overview","genres","map","genre","name","join","Suspense","fallback","Outlet"],"sourceRoot":""}