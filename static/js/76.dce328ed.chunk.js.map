{"version":3,"file":"static/js/76.dce328ed.chunk.js","mappings":"sQAAA,IAAMA,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAIOC,EAAgB,WAAH,OACxBC,MACE,iEACAN,GAECO,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAM,IAChCC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAMF,EAAI,GAAE,EAEzBG,EAAe,SAAAC,GAAE,OAC5BT,MAAM,sCAADU,OAAuCD,EAAE,kBAAkBf,GAC7DO,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAM,IAEhCC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAMF,EAAI,GAAE,EAEzBM,EAAU,SAAAF,GAAE,OACvBT,MAAM,sCAADU,OACmCD,EAAE,2BACxCf,GAECO,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAM,IAChCF,MAAK,SAAAC,GAAQ,OAAIA,EAASU,IAAI,IAC9BR,OAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAMF,EAAI,GAAE,EAEzBQ,EAAa,SAAAJ,GAAE,OAC1BT,MAAM,sCAADU,OACmCD,EAAE,kCACxCf,GAECO,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAM,IAChCF,MAAK,SAAAC,GAAQ,OAAIA,EAASY,OAAO,IACjCV,OAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAMF,EAAI,GAAE,EAEzBU,EAAa,SAAAC,GAAM,OAC9BhB,MAAM,mDAADU,OACgDM,EAAM,6CACzDtB,GAECO,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAM,IAChCF,MAAK,SAAAC,GAAQ,OAAIA,EAASY,OAAO,IACjCV,OAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAMF,EAAI,GAAE,C,0GC/CtC,EAAuB,mBAAvB,EAAiD,mBAAjD,EAA4E,oBAA5E,EAA8G,0B,SCqC9G,EAjCa,WACX,IAAQY,GAAYC,EAAAA,EAAAA,MAAZD,QACRE,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BP,EAAIS,EAAA,GAAEE,EAAOF,EAAA,GAQpB,OANAG,EAAAA,EAAAA,YAAU,WACY,IAAhBZ,EAAKa,SACPd,EAAAA,EAAAA,IAAQM,GAAShB,MAAK,SAAAC,GAAQ,OAAIqB,EAAQrB,EAAS,GAEvD,GAAG,CAACe,EAASL,KAGXc,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAASC,SACrBjB,EAAKkB,KAAI,SAAAC,GAAK,OACbC,EAAAA,EAAAA,MAAA,MAAIL,UAAWC,EAASC,SAAA,CACrBE,EAAME,cACLP,EAAAA,EAAAA,KAAA,OACEC,UAAWC,EACXM,IAAG,kCAAAxB,OAAoCqB,EAAME,cAC7CE,IAAKJ,EAAMK,QAGbV,EAAAA,EAAAA,KAAAW,EAAAA,SAAA,KAEFL,EAAAA,EAAAA,MAAA,OAAKL,UAAWC,EAAgBC,SAAA,EAC9BH,EAAAA,EAAAA,KAAA,KAAAG,SAAIE,EAAMK,QACVJ,EAAAA,EAAAA,MAAA,KAAAH,SAAA,CAAG,cAAYE,EAAMO,kBAZKP,EAAMtB,GAc/B,KAIb,C","sources":["API/Api.js","webpack://goit-react-hw-05-movies/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx"],"sourcesContent":["const options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJiYWNjZjMzMzVmZDU5YTNhYzRlYzFjYWFkZjZlYmFkOCIsInN1YiI6IjY1ODBjNzM5Y2VkYWM0MDgyNzdkNzg3NCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.9Jv2bkKP8rPp7N7NGgB2vb1RhAzWq8LfGK9DtcKMe6c',\n  },\n};\n\nexport const trendingToday = () =>\n  fetch(\n    'https://api.themoviedb.org/3/trending/movie/day?language=en-US',\n    options\n  )\n    .then(response => response.json())\n    .catch(err => console.error(err));\n\nexport const getMovieById = id =>\n  fetch(`https://api.themoviedb.org/3/movie/${id}language=en-US`, options)\n    .then(response => response.json())\n\n    .catch(err => console.error(err));\n\nexport const getCast = id =>\n  fetch(\n    `https://api.themoviedb.org/3/movie/${id}/credits?language=en-US`,\n    options\n  )\n    .then(response => response.json())\n    .then(response => response.cast)\n    .catch(err => console.error(err));\n\nexport const getReviews = id =>\n  fetch(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?language=en-US&page=1`,\n    options\n  )\n    .then(response => response.json())\n    .then(response => response.results)\n    .catch(err => console.error(err));\n\nexport const findMovies = querry =>\n  fetch(\n    `https://api.themoviedb.org/3/search/movie?query=${querry}&include_adult=true&language=en-US&page=1`,\n    options\n  )\n    .then(response => response.json())\n    .then(response => response.results)\n    .catch(err => console.error(err));\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Cast_list__GlWio\",\"item\":\"Cast_item__a0CDL\",\"photo\":\"Cast_photo__lvFLf\",\"description\":\"Cast_description__uN0VA\"};","import { getCast } from 'API/Api';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport css from './Cast.module.css';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    if (cast.length === 0) {\n      getCast(movieId).then(response => setCast(response));\n    }\n  }, [movieId, cast]);\n\n  return (\n    <ul className={css.list}>\n      {cast.map(actor => (\n        <li className={css.item} key={actor.id}>\n          {actor.profile_path ? (\n            <img\n              className={css.photo}\n              src={`https://image.tmdb.org/t/p/w300${actor.profile_path}`}\n              alt={actor.name}\n            />\n          ) : (\n            <></>\n          )}\n          <div className={css.description}>\n            <p>{actor.name}</p>\n            <p>Character: {actor.character}</p>\n          </div>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default Cast;\n"],"names":["options","method","headers","accept","Authorization","trendingToday","fetch","then","response","json","catch","err","console","error","getMovieById","id","concat","getCast","cast","getReviews","results","findMovies","querry","movieId","useParams","_useState","useState","_useState2","_slicedToArray","setCast","useEffect","length","_jsx","className","css","children","map","actor","_jsxs","profile_path","src","alt","name","_Fragment","character"],"sourceRoot":""}